<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="9fd5247d-55ed-4e22-8af2-01f89497c4f2" >
		<http:listener doc:name="GET /flights" doc:id="80673f70-0e99-4274-abc9-0ee8fc82e411" config-ref="HTTP_Listener_config" path="/flights" allowedMethods="GET" />
		<set-variable value="#[message.attributes.queryParams.airline]" doc:name="airline" doc:id="f9f12def-f984-416d-9b0f-0b3bfaa53541" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="a65950be-b907-4c06-8efa-2f6351de9945" name="setCode"/>
		<validation:is-true doc:name="Is valid destination" doc:id="67ed5dfd-81ca-4def-9331-2ad5e4979524" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]"/>
		<choice doc:name="Choice" doc:id="e9fb1001-9851-4add-a00b-f01d8a5f8926" >
			<when expression='#[vars.airline == "american"]'>
				<flow-ref doc:name="getAmericanFlights" doc:id="f5c5d6ea-3c00-46d9-9f04-5d50043aba9c" name="getAmericanFlights"/>
			</when>
			<when expression='#[vars.airline == "united"]'>
				<flow-ref doc:name="getUnitedFlights" doc:id="a9a17e5c-7135-4248-838e-d77d38c775e8" name="getUnitedFlights"/>
			</when>
			<when expression='#[vars.airline == "delta"]'>
				<flow-ref doc:name="getDeltaFlights" doc:id="12bcbf10-cb00-4e11-b6cb-3b6c7ea90934" name="getDeltaFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="b0dea150-1604-4e9d-83eb-697e613daf11" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="0196f4e9-1acf-44d3-b97f-8a33dfcaf03d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="DEBUG" doc:name="Logger" doc:id="374ed368-a778-45e7-9dab-29fb852e9657" category="logging"/>
	</flow>
	<flow name="getAllAirlineFlights" doc:id="af958fbd-31a2-458f-a2bd-85d987da807c" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="3c0d1ac1-c4cd-4bff-8075-6a4549c87e76" >
			<route >
				<flow-ref doc:name="getAmericanFlights" doc:id="f35b416b-c2ff-44fb-bd8f-2abe3c39b343" name="getAmericanFlights"/>
			</route>
			<route >
				<flow-ref doc:name="getUnitedFlights" doc:id="19714aca-9f1e-417e-9de0-521b56734871" name="getUnitedFlights"/>
			</route>
			<route >
				<flow-ref doc:name="getDeltaFlights" doc:id="6d8c64fa-78b6-4c15-8179-009780c1fb84" name="getDeltaFlights"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flight]" doc:id="def8abf0-8c46-4be8-87e2-f9d75484e26c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8a639378-4312-40aa-bd47-1df1bcf476b1" />
	</flow>
	<sub-flow name="setCode" doc:id="838d4696-3f1f-4266-a84a-d3c35f18e328" >
		<set-variable value="#[message.attributes.queryParams.code]" doc:name="code" doc:id="08c06523-5add-4fc3-9787-4dca3968956f" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="b8e22ae6-08b9-4c4f-bf49-ee6be5ccf7bc" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="ec4f41a1-8c5c-4b99-b286-4a68cae3838c" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flight]" doc:id="730b04a7-4d07-4ddb-9dcb-a77ba04e3335" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="c50aaa2a-c6ea-4011-a843-ef53dfa91a7f" />
	</flow>
	<flow name="getUnitedFlights" doc:id="a7143971-8161-4a1f-9e80-6f3d028e0a04" >
		<http:request method="GET" doc:name="Get flights" doc:id="28290246-8171-4a5c-a8ff-6e2e3be1eed4" config-ref="HTTP_Request_config_training" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="ed9c4441-8fc4-44fa-9580-55662ecafffa" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
}
as Object {
	class : "com.mulesoft.training.Flight"
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="a365a3ab-44f4-4c54-a3a9-d5c2d10e7de1" />
	</flow>
	<flow name="getDeltaFlights" doc:id="154f892d-802a-4cd5-91c4-606984abba74" >
		<ee:transform doc:name="Pass code" doc:id="f943881f-2ecf-4795-86a1-15cf9f9ae54e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="Get flights" doc:id="de731cb2-b9a8-4824-a422-fd5be97fa194" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="SOAP to [Flight]" doc:id="bd466281-017e-418c-ab56-13de2be4cc19" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="a1525343-0adb-433c-b200-fa33897202aa" />
	</flow>
</mule>
